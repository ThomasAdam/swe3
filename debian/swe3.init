#! /bin/sh
### BEGIN INIT INFO
# Provides:          swe3
# Required-Start:    $network $remote_fs
# Required-Stop:     $network $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Configure SmoothWall Express 3 at boot time.
# Description:       Starts and stops the SmoothWall Express 3 firewall.
### END INIT INFO

# Author: Thomas Adam <thomas@xteddy.org>

DESC="swe3 initscript"
NAME=swe3
SCRIPTNAME=/etc/init.d/$NAME
SWE3_SCRIPT_PATH="/usr/share/swe3/rc.d"
SWE3_SETTTINGS_ETH="/var/lib/swe3/smoothwall/ethernet/settings"
SWE3_FW_UP="$SWE3_SCRIPT_PATH/rc.firewall.up"
SWE3_FW_DOWN="$SWE3_SCRIPT_PATH/rc.firewall.down"

. "$SWE3_SETTTINGS_ETH"

# If we're not root, bail.
[ "$(id -u)" != "0" ] && {
    echo "Only root can start, stop or restart the SmoothWall Express 3 firewall."
    exit 1
}

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

failed_to_start()
{
    echo "FAIL."
    exit 1
}

#
# Function that starts the daemon/service
#
do_start()
{
    echo -n "Starting SmoothWall Express 3 : "
    $SWE3_FW_UP && echo "Done." || failed_to_start

    return 0
}

#
# Function that stops the daemon/service
#
do_stop()
{
    echo -n "Stopping SmoothWall Express 3 : "
    $SWE3_FW_DOWN && echo "Done." || failed_to_start

    return 0
}

#
# Function that sends a SIGHUP to the daemon/service
#
do_reload() {
	#
	# If the daemon can reload its configuration without
	# restarting (for example, when it is sent a SIGHUP),
	# then implement that here.
	#
	start-stop-daemon --stop --signal 1 --quiet --pidfile $PIDFILE --name $NAME
	return 0
}

case "$1" in
  start)
	do_start
	;;
  stop)
	do_stop
	;;
  restart|force-reload)
	do_stop
    do_start
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
	exit 3
	;;
esac

:
